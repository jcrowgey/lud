#![allow(non_snake_case)]
extern crate lud;

use lud::message::Message;

// TODO: more of these and with more detail
#[test]
fn test_parse_message_A() {
    let msg: [u8; 45] = [
        0x3e, 0x1d, 0x81, 0x80, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x07, 0x65, 0x78,
        0x61, 0x6d, 0x70, 0x6c, 0x65, 0x03, 0x63, 0x6f, 0x6d, 0x00, 0x00, 0x01, 0x00, 0x01, 0xc0,
        0x0c, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x1c, 0x3e, 0x00, 0x04, 0x5d, 0xb8, 0xd8, 0x22,
    ];
    let parsed = Message::from_wire(&msg[..]);
    assert_eq!(parsed.qdcount, 1);
    assert_eq!(parsed.ancount, 1);
    assert_eq!(parsed.nscount, 0);
    assert_eq!(parsed.arcount, 0);
}
